/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package PROYECTO1;

import Analizadores.A_lex;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.charset.StandardCharsets;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.xml.transform.Source;
import Analizadores.a_sintactico;
import Arbol.Arbol;
import Arbol.Nodo;
import javax.swing.JOptionPane;
import Error_.Errores;
import Error_.reportErrors;
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.StringReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.List;
import Arbol.Nodo_AFD;
import Analizadores.a_sintactico;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.nio.file.Files;
import java.nio.file.Path;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author USER
 */
public class Ventana_principal extends javax.swing.JFrame {
    File ArchivoActual=null;
    File archivo;
    JFileChooser seleccionar=new JFileChooser();
    FileInputStream entrada;
    FileOutputStream salida;
    public static ArrayList<NodoJS> listaJSON = new ArrayList<NodoJS>();

    /**
     * Creates new form Ventana_principal
     */
    public Ventana_principal() {
        initComponents();
    }
       
    public String GuardarComo(File archivo, String documento){
        String mensaje=null;
        try{
            salida=new FileOutputStream(archivo);
            byte[] bytxt=documento.getBytes();
            salida.write(bytxt);
            mensaje="Archivo guardado";
        }catch(Exception e){
            mensaje="Error al guardar";
        }
        return mensaje;
    
        
    }

    public void generarJSON(){
        String json = "[\n";
       for(int i=0; i<a_sintactico.evaluar.size();i++){
         json += "{\n";
            json += "\"Valor\": \""+a_sintactico.evaluar.get(i).getExpre()+"\",\n";
            json += "\"ExpresionRegular\": \""+a_sintactico.evaluar.get(i).getToken()+"\",\n";
            json += "\"Resultado\": \"true\"\n";
         json += " },\n";
       }
       json += " ]\n";
       // System.out.println(json);
        try {
            File file = new File("C:\\Users\\USER\\Desktop\\P1_OLC1_1S2023\\src\\GRAFICAS\\SALIDAS_202107190\\Salida.json");
            if (!file.exists()) {
                file.createNewFile();
            }
            PrintWriter writer = new PrintWriter(file);
            writer.println(json);
            writer.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
       // Desktop.getDesktop().open(new File("C:\\Users\\USER\\Desktop\\P1_OLC1_1S2023\\src\\GRAFICAS\\SALIDAS_202107190\\Salida.json"));
    }


    /**
     * This method is called from within the constructor to initialize the form.aqui va el guardar como
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Nuevo Archivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Guardar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Guardar como");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
            
        });

        jButton5.setText("Abrir archivo");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Analizar cadenas");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton7.setText("Generar automatas");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(313, 579, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jButton7)
                .addGap(112, 112, 112))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
          JFileChooser jfc = new JFileChooser();
        jfc.setCurrentDirectory(new File(System.getProperty("user.dir")));
        jfc.setFileFilter(new FileNameExtensionFilter("OLC Files", "olc"));
        int result = jfc.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION){
            String content = "";

            try (BufferedWriter writer = new BufferedWriter(new FileWriter(jfc.getSelectedFile()))) {
                writer.write(content);
            } catch (IOException ex) {
                Logger.getLogger(Ventana_principal.class.getName()).log(Level.SEVERE, null, ex);
            }
jTextArea1.setText(content);
        }


        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        // boton guardar
        File archivo = new File(jTextArea1.getText());
       
            try{
               PrintWriter salida = new PrintWriter(archivo);
               salida.println(jTextArea1.getText());
               salida.close();

            }catch (FileNotFoundException ex){
               ex.printStackTrace(System.out);
            }
        





    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
         JFileChooser jfc = new JFileChooser();
        jfc.setCurrentDirectory(new File(System.getProperty("user.dir")));
        jfc.setFileFilter(new FileNameExtensionFilter("OLC Files", "olc"));
        int result = jfc.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION){
            try {
                String canonical = jfc.getSelectedFile().getCanonicalPath();
                String content = Files.readString(Path.of(canonical));
                jTextArea1.selectAll();
                jTextArea1.replaceSelection("");
                jTextArea1.insert(content, 0);
              
            } catch (IOException ex) {
                Logger.getLogger(Ventana_principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        
        //SE REALIZO UN CAMBIO!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1
        reportErrors reporte = new reportErrors();
        
        Nodo raiz = null;
        
           if (jTextArea1.getText() != null) {
            try {
                Boolean Errores = false;

                String text2 = (String) jTextArea1.getText();
                A_lex lexico = new A_lex (new StringReader(text2));
                a_sintactico sintactico = new a_sintactico(lexico);
                sintactico.parse();

                if (lexico.errores.size() > 0 || sintactico.errores.size() > 0) {
                    if (lexico.errores.size() > 0) {
                        System.out.println("--------------ERRORES LEXICOS------------");
                        for (Errores errore : lexico.errores) {
                            System.out.println(errore.toString());
                        }
                    }
                    if (sintactico.errores.size() > 0) {
                        System.out.println("------------------ERRORES SINTACTICOS------------------");
                        for (Errores errore : sintactico.errores) {
                            System.out.println(errore.toString());
                        }
                    }

                   
                    Errores = true;                   
                    Desktop.getDesktop().open(new File("C:\\Users\\USER\\Desktop\\P1_OLC1_1S2023\\src\\GRAFICAS\\ERRORES_202107190\\Reporte_errores.html"));
                   
                   //agregadoooooooooooooooooooooooooooooooooooooooooooooooooooooooo
                   
                } else {
                    System.out.println("No se detectaron errores..");
              
        /*  
                   Map<String, ArrayList> cadee  = new HashMap<>();
                   cadee.put("text2", null);
                   cadee.put("text2", null);
                    Iterator<Map.Entry<String, ArrayList>> it =cadee.entrySet().iterator();
                    while(it.hasNext()){
                        Map.Entry<String, ArrayList> entry = it.next();
                        System.out.println("clave="+entry.getKey()+", valor="+entry.getValue());
                    }
                    */
                    Errores = false;
                }
                System.out.println("Generando reporte de errores....");
                reporte.GenerarReporte(lexico.errores, sintactico.errores);
                 lexico.errores.clear();
                    sintactico.errores.clear();
                // incluuir aca reporte de errores
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se detecto ningun texto, cargue un archivo o escriba en el area de texto.");
        }
        
        
        
        


  
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        for( int s=0;s<listaJSON.size();s++ ){
            System.out.println(listaJSON.get(s).getNombre());

           }
           generarJSON();
           a_sintactico.evaluar.clear();
listaJSON.clear();




        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        //aqui va el guardar como
          JFileChooser jfc = new JFileChooser();
        jfc.setCurrentDirectory(new File(System.getProperty("user.dir")));
        jfc.setFileFilter(new FileNameExtensionFilter("OLC Files", "olc"));
        int result = jfc.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION){
            String content = jTextArea1.getText();

            try (BufferedWriter writer = new BufferedWriter(new FileWriter(jfc.getSelectedFile()))) {
                writer.write(content);
            } catch (IOException ex) {
                Logger.getLogger(Ventana_principal.class.getName()).log(Level.SEVERE, null, ex);
            }

        }


        
        
        
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana_principal().setVisible(true);
            }
        });
    }
 private void abrirArchivos(String nombre) {
        try {
            File file = new File(nombre);
            if (!Desktop.isDesktopSupported()) {
                System.out.println("not supported");
                return;
            }
            Desktop desktop = Desktop.getDesktop();
            if (file.exists()) {
                System.out.println("Abriendo archivo.");
            }
            desktop.open(file);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
